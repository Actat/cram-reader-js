class CramReader{constructor(r,e,i,t,s){if(!window.Worker){throw"Web Workers API is needed"}if(!r||!e){throw"Files are Falsy"}this.i=new Cram(r,e,i,t,s);this.t=new Worker("cram-reader-worker.min.js")}getRecords(r,e,i,t,s){if(t){this.t.onmessage=function(r){t(r)}}if(s){this.t.onerror=function(r){s(r)}}this.t.postMessage(this.i,r,e,i)}}class Cram{constructor(r,e,i,t,s){if(!r||!e){throw"Files are Falsy"}this.o=i;this.i=new FileHandler(r,i);this.h=new FileHandler(e,i);this.l=this.u();if(t&&s){this.v=true;var a=new FileHandler(t,i);var n=new FileHandler(s,i);this.m=new Fasta(a,n)}else{this.v=false}this.F=new Map}getRecords(r,e,i){return new Promise(((t,s)=>{var a;var n=new CramHeader(this.i);var o=n.loadChrList().then((e=>{a=e;return e.indexOf(r)})).catch((r=>{s(r)}));var c=[];var h=[];Promise.all([this.l,o]).then((r=>{var t=r[0];var s=r[1];var a=[];t.forEach((r=>{if(r[0]==s&&r[1]<=i&&r[1]+r[2]>=e){var t=this.P(r).then((r=>{var t=this.p(s,e,i,r);c.push(t)}));a.push(t)}}));return a})).then((r=>Promise.all(r).then((()=>{c.forEach((r=>{h=h.concat(r)}));var r=[];h.forEach((e=>{r.push(this.H(a,e))}));return r})).catch((r=>{s(r)})))).then((r=>{Promise.all(r).then((()=>{t(h)})).catch((r=>{s(r)}))})).catch((r=>{s(r)}))}))}u(){return this.h.load().then((r=>{var e=[];var i=new Uint8Array(r);var t;try{var s=new Zlib.Gunzip(i);t=s.decompress()}catch(r){if(r.toString().includes("invalid file signature")){console.log("The crai file may be wrong, or a meddlesome browser may have unzipped it.");t=i}else{console.error(r)}}var a=String.fromCharCode.apply("",t);var n=a.split("\n");n.forEach((r=>{var i=r.split("\t");if(i.length==6){e.push([parseInt(i[0],10),parseInt(i[1],10),parseInt(i[2],10),parseInt(i[3],10),parseInt(i[4],10),parseInt(i[5],10)])}}));return e}))}P(r){var e=this.C(r[3]);var i=e.then((e=>this.I(r,e)));return Promise.all([e,i]).then((r=>{var e=new CramSlice(r[0],r[1]);return e.loadRecords()}))}C(r){return new Promise(((e,i)=>{if(this.F.has(r)){e(this.F.get(r))}var t=new CramDataContainer(this.i,r);this.F.set(r,t);e(t)}))}I(r,e){return e.loadHeaderLength().then((e=>{const i=r[3]+e+r[4];const t=r[5];return this.i.load(i,t)}))}p(r,e,i,t){var s=[];t.forEach((t=>{if(t.refSeqId==r&&t.position<=i&&t.position+t.readLength>=e){s.push(t)}}));return s}async H(r,e){e.refSeqName=r[e.refSeqId];e.restoreCigar();if(this.v){await e.restoreSequence(this.m)}}}class FileHandler{constructor(r,e=true){this.R=r;this.o=e}load(r=-1,e=-1){return new Promise(((i,t)=>{if(this.o){if(r>=0&&e>0){var s=this.R.slice(r,r+e);i(s.arrayBuffer())}else{i(this.R.arrayBuffer())}}else{var a=new XMLHttpRequest;a.open("GET",this.R);if(r>=0&&e>0){a.setRequestHeader("Range","bytes="+r+"-"+(r+e-1))}a.responseType="arraybuffer";a.onload=function(r){const e=a.response;if(e){i(e)}else{t(a.statusText)}};a.onerror=function(){t("An error occurred during HTTP access")};a.onabort=function(){t("HTTP access is aborted.")};a.timeout=function(){t("HTTP access timed out.")};a.send()}}))}}
